<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\deposit_withdraw; use App\Models\transactions; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class DepositWithdrawController extends Controller { public function index() { $trans = deposit_withdraw::orderBy("\x69\x64", "\x64\x65\x73\x63")->get(); $accounts = accounts::orderby("\x74\x79\x70\145", "\x61\163\143")->orderby("\164\151\164\x6c\145", "\141\163\143")->get(); return view("\106\151\x6e\x61\156\x63\x65\56\144\x65\x70\x6f\x73\151\164\137\167\x69\164\x68\x64\162\x61\x77\x2e\151\156\x64\145\170", compact("\x74\x72\x61\156\163", "\141\x63\x63\157\x75\156\x74\x73")); } public function create() { } public function store(Request $request) { try { DB::beginTransaction(); $ref = getRef(); deposit_withdraw::create(array("\141\x63\143\x6f\x75\x6e\x74\111\x44" => $request->accountID, "\144\141\x74\145" => $request->date, "\x74\x79\160\145" => $request->type, "\x61\155\x6f\x75\156\x74" => $request->amount, "\156\157\x74\x65\x73" => $request->notes, "\162\145\x66\x49\104" => $ref)); if ($request->type == "\x44\x65\x70\x6f\x73\x69\164") { createTransaction($request->accountID, $request->date, $request->amount, 0, "\104\x65\160\x6f\163\x69\x74\72\x20" . $request->notes, $ref); } else { createTransaction($request->accountID, $request->date, 0, $request->amount, "\127\x69\x74\150\144\162\141\167\72\40" . $request->notes, $ref); } DB::commit(); return back()->with("\163\x75\143\x63\x65\163\x73", "\x54\162\x61\x6e\163\x61\143\164\x69\157\156\40\x43\x72\145\x61\x74\x65\x64"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\162\162\157\x72", $e->getMessage()); } } public function show(deposit_withdraw $deposit_withdraw) { } public function edit(deposit_withdraw $deposit_withdraw) { } public function update(Request $request, deposit_withdraw $deposit_withdraw) { } public function delete($ref) { try { DB::beginTransaction(); deposit_withdraw::where("\162\x65\146\111\104", $ref)->delete(); transactions::where("\162\145\x66\111\104", $ref)->delete(); DB::commit(); session()->forget("\143\x6f\156\146\x69\x72\x6d\x65\144\x5f\x70\x61\x73\163\x77\157\x72\144"); return redirect()->route("\x64\145\160\x6f\x73\151\x74\x5f\167\151\x74\150\x64\162\141\167\x2e\151\x6e\x64\x65\170")->with("\163\165\143\143\145\x73\x73", "\124\162\141\156\163\141\143\x74\151\157\x6e\x20\x44\145\154\x65\x74\x65\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\143\x6f\x6e\x66\151\162\155\x65\144\137\160\141\163\x73\x77\157\162\x64"); return redirect()->route("\144\145\160\x6f\163\x69\x74\x5f\167\x69\164\x68\144\x72\x61\167\x2e\x69\156\144\x65\x78")->with("\x65\x72\x72\157\162", $e->getMessage()); } } }