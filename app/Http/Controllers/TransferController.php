<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\transactions; use App\Models\transfer; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class TransferController extends Controller { public function index() { $transfers = transfer::orderby("\151\144", "\x64\x65\x73\x63")->get(); $accounts = accounts::all(); return view("\x46\x69\156\141\156\143\x65\56\164\162\x61\x6e\x73\146\145\162\56\151\156\x64\145\x78", compact("\164\x72\141\156\x73\146\145\x72\x73", "\141\x63\x63\x6f\165\x6e\x74\163")); } public function create() { } public function store(Request $request) { $request->validate(array("\x74\157" => "\x64\151\146\146\x65\162\145\156\x74\72\146\x72\x6f\155"), array("\164\157\56\144\x69\146\146\x65\x72\145\x6e\164" => "\x46\162\157\155\40\141\x6e\144\40\x54\157\40\101\143\x63\157\165\156\x74\163\40\115\165\163\x74\x20\x62\x65\x20\x64\x69\x66\x66\x65\162\x65\x6e\164")); try { DB::beginTransaction(); $ref = getRef(); $transfer = transfer::create(array("\146\162\x6f\x6d" => $request->from, "\164\157" => $request->to, "\144\141\x74\x65" => $request->date, "\x61\x6d\x6f\165\x6e\164" => $request->amount, "\x6e\x6f\x74\145\163" => $request->notes, "\162\x65\146\111\104" => $ref)); $fromAccount = $transfer->fromAccount->title; $toAccount = $transfer->toAccount->title; if ($transfer->fromAccount->type == "\x43\x75\x73\x74\157\x6d\x65\162") { createTransaction($request->from, $request->date, $request->amount, 0, "\x54\x72\x61\156\x73\x66\x65\x72\145\x64\40\164\157\x20{$toAccount}", $ref); createTransaction($request->to, $request->date, $request->amount, 0, "\x54\x72\141\x6e\163\146\x65\162\x65\144\40\x66\x72\x6f\x6d\40{$fromAccount}", $ref); } elseif ($transfer->toAccount->type == "\103\x75\163\164\x6f\x6d\145\x72") { createTransaction($request->from, $request->date, 0, $request->amount, "\124\x72\x61\x6e\163\146\x65\x72\145\144\40\x74\x6f\x20{$toAccount}", $ref); createTransaction($request->to, $request->date, 0, $request->amount, "\124\162\141\156\163\146\x65\x72\x65\x64\40\146\x72\x6f\x6d\x20{$fromAccount}", $ref); } else { createTransaction($request->from, $request->date, 0, $request->amount, "\x54\162\x61\x6e\163\146\x65\x72\145\x64\x20\164\157\x20{$toAccount}", $ref); createTransaction($request->to, $request->date, $request->amount, 0, "\x54\x72\141\156\x73\146\145\162\x65\144\40\x66\x72\x6f\x6d\40{$fromAccount}", $ref); } DB::commit(); return back()->with("\x73\x75\x63\x63\145\x73\163", "\x54\x72\x61\156\163\x66\145\162\x65\x64\40\x53\165\143\x63\145\163\x73\146\x75\154\x6c\x79"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\x65\x72\x72\157\162", $e->getMessage()); } } public function show(transfer $transfer) { } public function edit(transfer $transfer) { } public function update(Request $request, transfer $transfer) { } public function delete($ref) { try { DB::beginTransaction(); transfer::where("\162\145\x66\111\104", $ref)->delete(); transactions::where("\162\145\x66\111\104", $ref)->delete(); DB::commit(); session()->forget("\143\x6f\156\x66\x69\x72\155\x65\144\137\160\x61\x73\163\x77\157\162\144"); return redirect()->route("\164\x72\x61\156\x73\x66\x65\x72\x73\x2e\x69\156\144\x65\170")->with("\163\165\x63\x63\x65\163\x73", "\124\162\141\x6e\163\x66\x65\x72\40\x44\145\154\x65\164\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\x6e\146\x69\x72\155\145\144\137\160\141\163\163\167\x6f\162\144"); return redirect()->route("\164\x72\141\156\x73\146\x65\x72\163\x2e\x69\156\144\x65\170")->with("\145\x72\x72\157\x72", $e->getMessage()); } } }