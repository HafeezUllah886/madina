<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\paymentReceiving; use App\Models\transactions; use Barryvdh\DomPDF\Facade\Pdf; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class PaymentReceivingController extends Controller { public function index() { $receivings = paymentReceiving::orderBy("\x69\x64", "\x64\x65\163\x63")->get(); $froms = accounts::where("\x74\x79\x70\145", "\41\x3d", "\x42\x75\163\x69\156\x65\x73\163")->get(); $accounts = accounts::Business()->get(); return view("\106\151\156\x61\156\143\x65\x2e\x72\145\x63\145\151\x76\x69\156\147\x2e\151\x6e\144\145\170", compact("\x72\145\143\145\x69\x76\151\x6e\x67\163", "\x66\x72\x6f\x6d\163", "\x61\143\143\157\x75\x6e\x74\163")); } public function create() { } public function store(Request $request) { try { DB::beginTransaction(); $ref = getRef(); paymentReceiving::create(array("\146\162\157\155\111\104" => $request->fromID, "\164\x6f\x49\104" => $request->accountID, "\165\163\145\x72\111\104" => auth()->user()->id, "\x61\x6d\x6f\165\x6e\x74" => $request->amount, "\144\x61\x74\145" => $request->date, "\156\157\x74\145\163" => $request->notes, "\x72\145\146\111\x44" => $ref)); createTransaction($request->accountID, $request->date, $request->amount, 0, "\x41\155\157\x75\156\164\40\122\145\x63\145\151\166\x65\144\x20\74\x62\162\76" . $request->notes, $ref); createTransaction($request->fromID, $request->date, $request->amount, 0, "\x41\x6d\x6f\x75\x6e\x74\40\x52\x65\x63\145\x69\166\x65\x64\40\x3c\142\x74\76" . $request->notes, $ref); DB::commit(); return back()->with("\x73\165\x63\x63\145\x73\163", "\122\x65\143\145\x69\160\164\40\x53\141\166\145\x64"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\x65\162\162\157\x72", $e->getMessage()); } } public function show($id) { $receiving = paymentReceiving::find($id); return view("\x46\x69\x6e\x61\x6e\x63\145\56\x72\145\143\x65\x69\x76\151\x6e\x67\x2e\162\145\x63\x65\151\x70\x74", compact("\x72\x65\143\x65\x69\166\x69\x6e\147")); } public function pdf($id) { $receiving = paymentReceiving::find($id); $pdf = Pdf::loadview("\x46\x69\156\141\x6e\x63\x65\56\162\145\143\x65\x69\x76\x69\x6e\x67\56\x70\144\x66", compact("\162\x65\x63\x65\x69\x76\x69\156\147")); $pdf->set_paper("\x6c\145\164\x74\x65\162", "\154\x61\x6e\144\163\143\x61\x70\145"); return $pdf->download("\122\145\143\x65\x69\x76\x69\x6e\x67\40\55\40{$receiving->refID}\x2e\160\144\x66"); } public function edit(paymentReceiving $paymentReceiving) { } public function update(Request $request, paymentReceiving $paymentReceiving) { } public function delete($ref) { try { DB::beginTransaction(); paymentReceiving::where("\162\145\x66\111\104", $ref)->delete(); transactions::where("\162\x65\x66\111\x44", $ref)->delete(); DB::commit(); session()->forget("\143\x6f\x6e\x66\x69\162\x6d\x65\x64\x5f\160\141\x73\163\x77\x6f\x72\144"); return redirect()->route("\162\145\143\145\151\x76\x69\x6e\x67\163\56\151\x6e\144\145\170")->with("\x73\x75\x63\143\x65\163\163", "\122\145\x63\145\x69\x76\x69\x6e\147\x20\x44\x65\154\145\164\x65\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\143\157\x6e\146\151\162\155\145\x64\x5f\160\141\163\163\x77\x6f\162\x64"); return redirect()->route("\162\145\x63\145\151\x76\151\x6e\x67\x73\56\151\156\x64\145\170")->with("\145\162\x72\x6f\x72", $e->getMessage()); } } }